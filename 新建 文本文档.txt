codes  GCN
codetest1   GCN+GAT串行
codetest2   GCN+CRMSA，MLP,门控，残差
codetest3   GCN+GAT并行
codetest4   GCN+Dual Attention
codetest5   GCN+Hierarchical Attention
codetest6   GCN+Self Attention
codetest7   GCN+Self Attention十折交叉验证，3层GCN
codetest8   GCN+Self Attention，MLP,门控，残差
codetest9   基于2移除图增强
codetest10   基于2移除门控注意力
codetest11   基于2移除MLP
codetest12   基于2移除CRMSA
codetest13   基于2移除辅助分类
codetest14   基于2移除残差连接
codetest15   基于2移除MixedOrderGCN

codetest21   超图卷积
codetest22   超图卷积，1成分
codetest23   超图卷积，2成分  HCGCN-all herb pairs_hyper3.cites
codetest24   超图卷积，3成分  HCGCN-all herb pairs_hyper4.cites
codetest26   超图卷积，4成分  HCGCN-all herb pairs_hyper5.cites
codetest27   超图卷积，5成分  HCGCN-all herb pairs_hyper6.cites
codetest28   超图卷积，6成分  HCGCN-all herb pairs_hyper7.cites
codetest29   超图卷积，7成分  HCGCN-all herb pairs_hyper8.cites
codetest30   超图卷积，8成分  HCGCN-all herb pairs_hyper9.cites
codetest31   超图卷积，9成分  HCGCN-all herb pairs_hyper10.cites
codetest32   超图卷积，10成分  HCGCN-all herb pairs_hyper11.cites
codetest33   超图卷积，11成分  HCGCN-all herb pairs_hyper12.cites
codetest34   超图卷积，12成分  HCGCN-all herb pairs_hyper13.cites
codetest35   超图卷积，13成分  HCGCN-all herb pairs_hyper14.cites
codetest36   超图卷积，14成分  HCGCN-all herb pairs_hyper15.cites
codetest37   超图卷积，15成分  HCGCN-all herb pairs_hyper16.cites未跑
codetest38   超图卷积，16成分  HCGCN-all herb pairs_hyper17.cites未跑
codetest39   超图卷积，17成分  HCGCN-all herb pairs_hyper18.cites未跑
codetest40   超图卷积，18成分  HCGCN-all herb pairs_hyper19.cites未跑
codetest41   超图卷积，19成分  HCGCN-all herb pairs_hyper20.cites未跑
codetest42   超图卷积，20成分  HCGCN-all herb pairs_hyper21.cites未跑
codetest43   超图卷积，21成分  HCGCN-all herb pairs_hyper22.cites未跑




codetest25   超图卷积，0.1成分，


MLP特征提取 (FeatureExtractor)
门控注意力 (GatedAttention)
图卷积层 (MixedOrderGCN 和 GraphConvolution)
残差连接和辅助分类器

200   学习率0.005   权重5e-4
2000  学习率0.005   权重5e-4
20000 学习率0.001  权重5e-4
20000 学习率0.001  权重1e-3
2000  学习率0.0001   权重5e-4
2000  学习率0.001   权重5e-4
30000次
0.969±0.009	0.989±0.006	0.969±0.011	0.979±0.006	0.954±0.016
0.948±0.028	0.967±0.023	0.962±0.024	0.964±0.019	0.933±0.038
原来负对数似然损失


这是一个模型所有的代码，其中txt文件为模型的原始输入数据集，其中每行为一个药对（包含两种中药材），这个模型是用来预测药对是否有效，现在我新建了一个数据集，为csv文件，文件包含txt文件中所有的中药材（经过去重），其中每行的第一列为中药材名字，第二列开始为中药材包含的所有成分，并且每种中药材的种类数量不一致，我现在想把新建的数据集也作为训练模型的数据集，请为我提供一些思路
=ROUND(AVERAGE(A1,A3,A5,A7,A9),3)&"±"&ROUND(STDEV.S(A1,A3,A5,A7,A9),3)
=ROUND(AVERAGE(A2,A4,A6,A8,A10),3)&"±"&ROUND(STDEV.S(A2,A4,A6,A8,A10),3)
=ROUND(AVERAGE(G3,G6,G9,G12,G15,G18,G21,G24,G27,G30),3)&"±"&ROUND(STDEV.S(G3,G6,G9,G12,G15,G18,G21,G24,G27,G30),3)

class GCNWithAttention(nn.Module):
    def __init__(self, nfeat, nhid, nclass, dropout, n_heads=4):
        super().__init__()
        self.gc1 = GraphConvolution(nfeat, nhid)
        self.gc2 = GraphConvolution(nhid, nclass)
        self.transformer = TransformerLayer(nhid, n_heads, dropout)
        self.dropout = dropout

    def forward(self, x, adj):
        # 确保FP32计算
        x = x.float()
        adj = adj.float() if adj.is_sparse else adj

        # 第一层GCN
        x = F.relu(self.gc1(x, adj))
        x = F.dropout(x, self.dropout, training=self.training)

        # Transformer处理
        x_trans = x.unsqueeze(0).float()  # [1, N, nhid]
        adj_mask = adj.to_dense().unsqueeze(0).unsqueeze(0).float()
        x_trans, _ = self.transformer(x_trans, adj_mask)
        x = x + x_trans.squeeze(0)

        # 第二层GCN
        x = self.gc2(x, adj)
        return F.log_softmax(x, dim=1)

1. 高级注意力机制增强
修改方案：在原有CR-MSA基础上增加门控注意力
2. 多任务学习辅助
修改方案：增加辅助分类头提升特征判别性
3. 图数据增强
修改方案：在训练时动态边缘扰动
4. 高阶图卷积
修改方案：混合K阶邻域信息
5. 损失函数优化
修改方案：Focal Loss + 标签平滑
6. 特征工程增强
修改方案：图拓扑特征拼接
herb_csv_path = 'merged_filtered_herbs.csv'
    herb_pairs_path = 'C:\\project\\python\\pythonProject\\re\\keti\\dataset\\herb pairs for training\\all herb pairs for training.txt'
    output_path = 'C:\\project\\python\\pythonProject\\re\\keti\\dataset\\training data\\HCGCN-all herb pairs_hyper.cites'


txt文件是一个药对数据集，每一行有两种中药材，以空格分开，一共有685行，不同的两行可能会有相同的中药材；csv文件是一个包含几千字中药及其所有成分的数据，其中每行的第二列为中药名，第三列往后是对应的成分，每种中药材的成分数量不等。请帮我写个python代码，从csv文件中筛选出txt文件中对应的所有中药材（去掉重复的）及其所有的成分，保存到一个新的csv文件
=TEXTJOIN(";", TRUE, A2:A168)
这是一个模型所有的代码，其中txt文件为模型的原始输入数据集，其中包含220种中药组成的一个药对数据集，其中每行为一个药对（包含两种中药材），共有685个药对，这个模型是用来预测药对是否有效，模型的输入为.cites文件和.content文件，其中.cites文件为含有相同草药的药对之间的邻接矩阵，.content文件为每个药对的特征矩阵，一共有48列，第一列为药对对应的编号，第2-47列为每个药对的46维特征向量，第48列为药对二分类标签。现在我新建了一个数据集，为csv文件，文件包含txt文件中所有的220种中药材（经过去重），表格的第一行为表头，其中每行的第一列为中药材的中文名字名字，第二列开始为中药材包含的所有成分，并且每种中药材的成分数量不一致，我现在想把新建的数据集也作为训练模型的数据集，我想要新建一个通道，构建一个超图，经过超图卷积进行训练我的新数据集，最后进行原来的模型进行双通道信息融合，构建超图要用到csv文件中每种草药的全部成分，涉及到修改代码的文件都给出完整的代码，如果需要新增加文件也给出完整代码